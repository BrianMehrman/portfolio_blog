class FileUploader < CarrierWave::Uploader::Base
  include CarrierWave::RMagick

  storage :file

  def store_dir
    "uploads/#{model.class.to_s.underscore}/#{mounted_as}/#{model.id}"
  end

  version :thumb, :if=> :is_image? do
    process :resize_to_limit => [256, 256]
  end

  protected

    def is_image? file
      valid_image_types.include?( mime(file) )
    end

    def mime file
      MIME::Types.type_for(file.file).first.content_type
    end

    def valid_image_types
      %w(AAI ART ARW AVI AVS BMP BMP2 BMP3 CALS CGM CIN CMYK CMYKA CR2 CRW CUR CUT DCM DCR DCX DDS DIB DJVU DNG DOT DPX EMF EPDF EPI EPS EPS2 EPS3 EPSF EPSI EPT EXR FAX FIG FITS FPX GIF GPLT GRAY HDR HPGL HRZ HTML ICO INFO INLINE JBIG JNG JP2 JPT J2C J2K JPEG JPG JXR JSON MAN MAT MIFF MONO MNG M2V MPEG MPC MPR MRW MSL MTV MVG NEF ORF OTB P7 PALM PAM CLIPBOARD PBM PCD PCDS PCL PCX PDB PDF PEF PFA PFB PFM PGM PICON PICT PIX PNG PNG8 PNG00 PNG24 PNG32 PNG48 PNG64 PNM PPM PS PS2 PS3 PSB PSD PTIF PWP RAD RAF RGB RGBA RFG RLA RLE SCT SFW SGI SHTML SID  MrSID SPARSE-COLOR SUN SVG TGA TIFF TIM TTF TXT UIL UYVY VICAR VIFF WBMP WDP WEBP WMF WPG X XBM XCF XPM XWD X3F YCbCr YCbCrA YUV)
    end
end


# "AAI,ART,ARW,AVI,AVS,BMP, BMP2, BMP3,CALS,CGM,CIN,CMYK,CMYKA,CR2,CRW,CUR,CUT,DCM,DCR,DCX,DDS,DIB,DJVU,DNG,DOT,DPX,EMF,EPDF,EPI,EPS,EPS2,EPS3,EPSF,EPSI,EPT,EXR,FAX,FIG,FITS,FPX,GIF,GPLT,GRAY,HDR,HPGL,HRZ,HTML,ICO,INFO,INLINE,JBIG,JNG,JP2,JPT,J2C,J2K,JPEG,JXR,JSON,MAN,MAT,MIFF,MONO,MNG,M2V,MPEG,MPC,MPR,MRW,MSL,MTV,MVG,NEF,ORF,OTB,P7,PALM,PAM,CLIPBOARD,PBM,PCD,PCDS,PCL,PCX,PDB,PDF,PEF,PFA,PFB,PFM,PGM,PICON,PICT,PIX,PNG,PNG8,PNG00,PNG24,PNG32,PNG48,PNG64,PNM,PPM,PS,PS2,PS3,PSB,PSD,PTIF,PWP,RAD,RAF,RGB,RGBA,RFG,RLA,RLE,SCT,SFW,SGI,SHTML,SID, MrSID,SPARSE-COLOR,SUN,SVG,TGA,TIFF,TIM,TTF,TXT,UIL,UYVY,VICAR,VIFF,WBMP,WDP,WEBP,WMF,WPG,X,XBM,XCF,XPM,XWD,X3F,YCbCr,YCbCrA,YUV"
